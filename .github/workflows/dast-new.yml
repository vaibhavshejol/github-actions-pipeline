on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  dast-scan:
      #contents: read # for actions/checkout to fetch code
      #security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      #actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status 
      #missing only package:read?
    name: DAST Scan
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: employee-service-db
        ports:
          - 5433:5432
        options: --health-cmd="pg_isready -U user" --health-timeout=30s --health-retries=3

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Clear Gradle cache
        run: rm -rf $HOME/.gradle/caches/

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - run: docker rm github-action-pipeline | true && docker run -d -p 8080:9090 --name github-action-pipeline vaibhavshejol/github-actions-pipeline:latest      

      - name: Run application container
        run: docker run -d -p 8080:9090 --name github-action-pipeline \
            -e DB_HOST=postgres \
            -e DB_PORT=5432 \
            -e DB_USER=user \
            -e DB_PASSWORD=password \
            -e DB_NAME=mydb \
            vaibhavshejol/github-actions-pipeline:latest
      # - name: wait for container to start
      #   run: timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080)" != "200" ]]; do sleep 5; done' || false

      - name: Wait for 30 seconds
        run: sleep 30

      - name: Application container logs
        run: docker logs github-action-pipeline

      # - name: test container
      #   run: curl -s localhost:8080/com.amazingcode.in/api/employees
     
      - name: Run ZAP OWASP full scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://localhost:8080'
          cmd_options: '-a -j -l WARN -z "-addoninstallall" '
          allow_issue_writing: true

      - name: Upload html report
        uses: actions/upload-artifact@v3
        with:
          name: DAST_Report.html
          path: report_html.html

      - name: stop docker
        if: always()
        run: |
          docker stop github-action-pipeline && docker rm github-action-pipeline && docker container prune --force && docker image prune --force
